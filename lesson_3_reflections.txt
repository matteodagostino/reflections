When would you want to use a remote repository rather than keeping all your work
local?
E' utile utilizzare repository remote nel caso di progetti complessi su cui
lavorano più utenti, anche modificando gli stessi stessi file contemporaneamente.
Le repository locali vanno bene per progetti su cui lavora un singolo utente.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
Il concetto è che i commit vanno effettuati a seguito di una modifica che
corrisponde ad un'unità logica chiara al fine di mantenere ordine e poter 
avere controllo sul progetto. Nel caso di modifiche sugli stessi file da
locale e da remoto, un salvataggio automatico in locale delle modifiche remote 
porterebbe solo a maggior confusione con rischi di errori.
In particolare le modifiche nel remote potrebbero essere state effettuate
da altri utenti dato che possono essere pubbliche.


Describe the differences between forks, clones, and branches.  When would you
use one instead of another?
I cloni sono copie esatte di una repository fatte da una macchina locale
oppure remota (es. da GitHub). I fork sono una sorta di clone
fatto però esclusivamente tra repository remote, entrambe in in GitHub.
I branch sono rami di una repository, sono inclusi in una repository.


What is the benefit of having a copy of the last known state of the remote
stored locally?
Avere una copia locale dell'ultimo stato conosciuto del remote è utile
per agevolare il merge tra versione locale e versione remota qualora
entrambe siano state aggiornate e contengano dei commit non condivisi.
Potrò infatti aggiungere all'origin/master locale, tramite il comando fetch,
i commit remoti, per poi effettuare un merge con il master locale, risolvendo
eventuali conflitti. Il comando git pull fa lo stesso lavoro:
git pull origin master = (git fecth origin  + git merge master origin/master)

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?
Collaborare senza usare Git, renderebbe difficile lavorare sui file perché
si dovrebbe sempre lavorare esclusivamente online, mentre collaborare senza
usare GitHub ma solo Git, non consentirebbe di eseguire le Pull requests
e quindi di chiedere un'opinione prima di effettuare un aggiornamento da remoto.


When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?
Come visto nella riflessione 4 della lezione 2, in generale lavorare su branch
separato è utile quando vogliamo testare due versioni differenti dello
stesso software o quando dobbiamo risolvere un bug o se dobbiamo lavorare su una
repository contemporaneamentecon altri utenti remoti.
Aggiungiamo ora che lavorando da remoto su un branch differente dal master, potremo
in seguito inviare il commit su remote (git push), su branch separato 
(git push origin nomeBranchSeparato), per poi fare una "pull request" e far controllare
ai collaboratori le modifiche effettuate prima di fare unirle al master


